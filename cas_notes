* Computer Algebra System
done
    represented as a tree

    basic compute unit is an integer
        keep other numbers in their form

    imaginary numbers

    limits
        can be used to represent irrational constants
        lim \var -> \inf

    variables
        arbitrary strings

    function type
        function name
        list of arguments
        can be used with equals sign to define it in terms of functions we know

wip
    simplify symbolically
        let users define functions that can modify subexpressions
            randomly choose a function
                apply it to a random subexpression
            the functions bind to the subexpressions and do something to the subexpression
                if it can't bind it just returns the same subexpression
        let users define complexity for functions / variables (new variables are the sum of their constiuents)
        specify a timeout
        be able to simplify eqn to "$VAR = ..."
            by order of priority:
                minimize occurences of $VAR
                minmize number of terms on same side as $VAR

possibilities
    summ/product

    derivative/integral

    have SI units? -> later

    less than, greater than
        how can this be used

    approx solve numerically
        specify percent accuracy
            how to make sure everything converges
        calculate decimal from fully defined value
        finite element method (reimann sums, input number of splits)
            for approximating integrals
            https://marksmath.org/visualization/RiemannError/
        finite difference method (euler method, input size of steps)
            for approximating derivatives
        newton method
            for finding zeros
        increase value for finding inf

    tensors
        should be simple enough, just the above with more definitions

